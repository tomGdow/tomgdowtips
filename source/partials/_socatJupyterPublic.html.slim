.row
  .large-12.columns
    .secondary.callout
      .comment 
        |A Jupyter notebook (
        ==link_to "Julia",
          "http://julialang.org/",
          :target => "_blank"
        |, 
        ==link_to "Python", 
          "https://ipython.org/notebook.html",
          :target => "_blank"
        |&nbsp;or&nbsp;
        ==link_to "Ruby",
          "https://github.com/SciRuby/iruby",
          :target => "_blank"
        |) may be accessed publicly using 
        ==link_to "socat",
          "http://www.dest-unreach.org/socat/",
          :target => "_blank"
        |&nbsp;as follows:
      .comment Start the jupyter notebook on the remote server
      pre jupyter notebook
      pre
        |&raquo; ... Jupyter Notebook is running at:
        | http://localhost:9999/   *(abridged)
      .comment On the remote server, in a separate terminal window, execute:
      pre#socatJupyter socat TCP-LISTEN:8090,fork TCP:localhost:9999
      .comment 
        |Now all notebooks running under the Jupyter system will be publicly 
        |available at: 
      pre server-name:8090
      .commentHeading Notes
      .comment
        | The Jupyter system may be&nbsp;
        ==link_to "password-protected",
          "http://jupyter-notebook.readthedocs.io/en/latest/public_server.html",
          :target => "_blank"
      .commment 
        |The default port for Jupyter on the current system is 9999.&nbsp;
        |The port number in the&nbsp;
        ==link_to "socat command",
          "#socatJupyter"
        |&nbsp;may need to be modified accordingly.  
      .comment To start the Jupyter system on a different port, for example port 3000:
      pre jupyter notebook --port=3000
      .comment
        == link_to "Netcat",
          "https://www.digitalocean.com/community/tutorials/how-to-use-netcat-to-establish-and-test-tcp-and-udp-connections-on-a-vps",
          :target => "_blank"
        |&nbsp;may be used to check that all is well with the&nbsp;
        ==link_to "socat command",
          "#socatJupyter"
      pre 
        | netcat -z -v localhost 8090  
          &raquo; Connection to localhost 8090 port [tcp/*] succeeded!

      .commentHeading Alternative Method with ssh Tunnel
      .comment 
        | The alternative method given&nbsp;
        ==link_to "here",
          "index.html#altssh_method",
          :target => "_blank"
        |&nbsp;for allowing public access to a Ruby-on-Rails application 
        |&nbsp;may also be applied to a Jupyter notebook
